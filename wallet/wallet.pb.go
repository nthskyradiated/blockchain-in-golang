// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.14.0
// source: wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SerializableWallet definition
type SerializableWallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKeyD   []byte                 `protobuf:"bytes,1,opt,name=private_key_d,json=privateKeyD,proto3" json:"private_key_d,omitempty"` // Private key's D value
	PublicKey     []byte                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`         // Public key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SerializableWallet) Reset() {
	*x = SerializableWallet{}
	mi := &file_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerializableWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableWallet) ProtoMessage() {}

func (x *SerializableWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableWallet.ProtoReflect.Descriptor instead.
func (*SerializableWallet) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *SerializableWallet) GetPrivateKeyD() []byte {
	if x != nil {
		return x.PrivateKeyD
	}
	return nil
}

func (x *SerializableWallet) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// SerializableWallets definition
type SerializableWallets struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Wallets       map[string]*SerializableWallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of address to wallet
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SerializableWallets) Reset() {
	*x = SerializableWallets{}
	mi := &file_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerializableWallets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableWallets) ProtoMessage() {}

func (x *SerializableWallets) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializableWallets.ProtoReflect.Descriptor instead.
func (*SerializableWallets) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *SerializableWallets) GetWallets() map[string]*SerializableWallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

var File_wallet_proto protoreflect.FileDescriptor

const file_wallet_proto_rawDesc = "" +
	"\n" +
	"\fwallet.proto\x12\x06wallet\"W\n" +
	"\x12SerializableWallet\x12\"\n" +
	"\rprivate_key_d\x18\x01 \x01(\fR\vprivateKeyD\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\fR\tpublicKey\"\xb1\x01\n" +
	"\x13SerializableWallets\x12B\n" +
	"\awallets\x18\x01 \x03(\v2(.wallet.SerializableWallets.WalletsEntryR\awallets\x1aV\n" +
	"\fWalletsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.wallet.SerializableWalletR\x05value:\x028\x01B=Z;github.com/nthskyradiated/blockchain-in-golang/wallet/protob\x06proto3"

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData []byte
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)))
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wallet_proto_goTypes = []any{
	(*SerializableWallet)(nil),  // 0: wallet.SerializableWallet
	(*SerializableWallets)(nil), // 1: wallet.SerializableWallets
	nil,                         // 2: wallet.SerializableWallets.WalletsEntry
}
var file_wallet_proto_depIdxs = []int32{
	2, // 0: wallet.SerializableWallets.wallets:type_name -> wallet.SerializableWallets.WalletsEntry
	0, // 1: wallet.SerializableWallets.WalletsEntry.value:type_name -> wallet.SerializableWallet
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}
